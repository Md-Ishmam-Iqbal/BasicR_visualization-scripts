theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
## Violin plot
vplot <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_violin() +
stat_boxplot(geom = "errorbar", width = 0.5, position = position_dodge(width = 0.75)) +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Violin Plot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
ggarrange(bplot, vplot, nrow=2, ncol=1)
## Boxplot
bplot <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_boxplot() +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Boxplot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
## Violin plot
vplot <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_violin() +
stat_boxplot(geom = "errorbar", width = 0.5, position = position_dodge(width = 0.75)) +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Violin Plot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
ggarrange(bplot, vplot, nrow=2, ncol=1)
bplot <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar", width = 0.5, position = position_dodge(width = 0.75)) +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Boxplot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
## Violin plot
vplot <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_violin() +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Violin Plot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
ggarrange(bplot, vplot, nrow=2, ncol=1)
## Boxplot
bplot <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_boxplot() +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Boxplot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
## Violin plot
vplot <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_violin() +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Violin Plot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
withoutStat <- ggarrange(bplot, vplot, nrow=2, ncol=1)
bplot_stat <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar", width = 0.5, position = position_dodge(width = 0.75)) +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Boxplot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
vplot_stat <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_violin() +
stat_boxplot(geom = "errorbar", width = 0.5, position = position_dodge(width = 0.75)) +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Violin Plot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
withStat <- ggarrange(bplot_stat, vplot_stat, nrow=2, ncol=1)
withStat
withStat <- ggarrange(bplot_stat, vplot_stat, nrow=1, ncol=2)
withStat
ggarrange(withoutStat, withStat, layout_matrix=rbind(c(1), c(2)))
ggarrange(withoutStat, withStat, layout_matrix=rbind(c(2), c(2)))
ggarrange(withoutStat, withStat, layout_matrix=rbind(c(2), c(2))
ggarrange(withoutStat, withStat, layout_matrix=rbind(c(1), c(1), c(1), c(1)))
ggarrange(withoutStat, withStat, layout_matrix=rbind(c(1), c(1), c(1), c(1)))
ggarrange(withoutStat, withStat, layout_matrix=rbind(4))
ggarrange(withoutStat, withStat, layout_matrix=rbind(c(1,1,2,2))
ggarrange(withoutStat, withStat, layout_matrix=rbind(c(1,1,2,2)))
ggarrange(withoutStat, withStat, layout_matrix = rbind(c(1, 1, 2, 2)))
ggarrange(withoutStat, withStat, nrow=2, heights=c(1, 1))
golub_fac_table <- table(gol.fac)
golub_fac_df <- data.frame(Type = names(golub_fac_table), Count = as.numeric(golub_fac_table))
## Barplot
ggplot(golub_fac_df, aes(x = Type, y = Count, fill = Type)) +
geom_bar(stat = "identity", color = "black") +
xlab("Types of leukemia") +
ylab("Number of patients") +
labs(title = "Barplot of patients by types of leukemia") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
# Prep data
expression_data_box <- data.frame(Expression = golub[1042,], SampleType = as.factor(gol.fac))
## Boxplot
bplot <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_boxplot() +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Boxplot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
## Violin plot
vplot <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_violin() +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Violin Plot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
withoutStat <- ggarrange(bplot, vplot, nrow=1, ncol=2)
bplot_stat <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar", width = 0.5, position = position_dodge(width = 0.75)) +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Boxplot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
vplot_stat <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_violin() +
stat_boxplot(geom = "errorbar", width = 0.5, position = position_dodge(width = 0.75)) +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Violin Plot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
withStat <- ggarrange(bplot_stat, vplot_stat, nrow=1, ncol=2)
ggarrange(withoutStat, withStat, nrow=2, heights=c(1, 1))
vplot_stat <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_violin() +
stat_boxplot(geom = "errorbar", width = 0.5, position = position_dodge(width = 0.9)) +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Violin Plot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
withStat <- ggarrange(bplot_stat, vplot_stat, nrow=1, ncol=2)
ggarrange(withoutStat, withStat, nrow=2, heights=c(1, 1))
vplot_stat <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_violin() +
stat_boxplot(geom = "errorbar", width = 0.5, position = position_dodge(width = 0.75)) +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Violin Plot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
withStat <- ggarrange(bplot_stat, vplot_stat, nrow=1, ncol=2)
ggarrange(withoutStat, withStat, nrow=2, heights=c(1, 1))
getwd()
basic_dark_plot
basic_light_plot
ggplot(plot_data, aes(x = Patients, y = Expression,
color = gol.fac)) +
geom_point(size = 2, shape=1) +
geom_smooth(method = "lm", se = FALSE, linetype = "dashed", size = 0.5) +
geom_text_repel(aes(label = Expression), vjust = -2, color = "black", size = 2) +
xlab("Patients") +
ylab("Expression values") +
facet_wrap(~c("ALL", "AML")) +
labs(
title = "Gene Expression Analysis of CCND3 Cyclin D3 Gene",
subtitle = "Comparison of gene expression values between ALL and AML samples",
caption = "Data source: Golub et al. ALL/AML dataset"
) +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
plot.subtitle = element_text(color = "#666666", size = 12),
plot.caption = element_text(color = "#666666", size = 10),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.title = element_text(color = "#333333", size = 12, face = "bold"),
legend.text = element_text(color = "#666666", size = 10),
legend.position = "top",
legend.background = element_rect(fill = "white"),
legend.spacing.x = unit(0.5, "cm")
) +
scale_color_manual(values = c("#6BAED6", "#F8766D"), name = "Sample Type")
ggarrange(basic_dark_plot, basic_light_plot, ncol=1, nrow=2, heights=c(1,1))
ggarrange(basic_dark_plot, publication_plot, ncol=1, nrow=2, heights=c(1,1))
# Install necessary libraries if not already installed
## install.packages("ggplot2")
## install.packages("ggrepel")
## install.packages("BiocManager")
## BiocManager::install("multtest")
## install.packages("ggpubr")
install.packages("ggforce")
library(ggforce)
publication_plot <- ggplot(plot_data, aes(x = Patients, y = Expression,
color = gol.fac)) +
geom_point(size = 2, shape=1) +
geom_smooth(method = "lm", se = FALSE, linetype = "dashed", size = 0.5) +
geom_text_repel(aes(label = Expression), vjust = -2, color = "black", size = 2) +
xlab("Patients") +
ylab("Expression values") +
labs(
title = "Gene Expression Analysis of CCND3 Cyclin D3 Gene",
subtitle = "Comparison of gene expression values between ALL and AML samples",
caption = "Data source: Golub et al. ALL/AML dataset"
) +
theme_minimal() +
facet_zoom(xlim = c(10, 20) +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
plot.subtitle = element_text(color = "#666666", size = 12),
plot.caption = element_text(color = "#666666", size = 10),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.title = element_text(color = "#333333", size = 12, face = "bold"),
legend.text = element_text(color = "#666666", size = 10),
legend.position = "top",
legend.background = element_rect(fill = "white"),
legend.spacing.x = unit(0.5, "cm")
) +
scale_color_manual(values = c("#6BAED6", "#F8766D"), name = "Sample Type")
## ggarrange
ggarrange(basic_dark_plot, publication_plot, ncol=1, nrow=2, heights=c(1,1))
## ggarrange
ggarrange(basic_dark_plot, publication_plot, ncol=1, nrow=2, heights=c(1,1))
publication_plot
factor(golub.cl, levels = 0:1, labels = c("ALL", "AML"))
publication_plot <- ggplot(plot_data, aes(x = Patients, y = Expression,
color = gol.fac)) +
geom_point(size = 2, shape=1) +
geom_smooth(method = "lm", se = FALSE, linetype = "dashed", size = 0.5) +
geom_text_repel(aes(label = Expression), vjust = -2, color = "black", size = 2) +
xlab("Patients") +
ylab("Expression values") +
labs(
title = "Gene Expression Analysis of CCND3 Cyclin D3 Gene",
subtitle = "Comparison of gene expression values between ALL and AML samples",
caption = "Data source: Golub et al. ALL/AML dataset"
) +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
plot.subtitle = element_text(color = "#666666", size = 12),
plot.caption = element_text(color = "#666666", size = 10),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.title = element_text(color = "#333333", size = 12, face = "bold"),
legend.text = element_text(color = "#666666", size = 10),
legend.position = "top",
legend.background = element_rect(fill = "white"),
legend.spacing.x = unit(0.5, "cm")
) +
scale_color_manual(values = c("#6BAED6", "#F8766D"), name = "Sample Type") +
facet_zoom(x = Patients < 10, xlim = c(1, 10), ylim = c(min(Expression), max(Expression)))
actor(golub.cl, levels = 0:1, labels = c("ALL", "AML"))
# Install necessary libraries if not already installed
## install.packages("ggplot2")
## install.packages("ggrepel")
## install.packages("BiocManager")
## BiocManager::install("multtest")
## install.packages("ggpubr")
# Load necessary libraries
library(ggplot2)
library(ggrepel)
library(multtest)
library(ggpubr)
# Load the Golub et al. ALL/AML dataset
data(golub)
## Prep data
gene_values <- golub[1042,]
plot_data <- data.frame(Patients = 1:length(gene_values), Expression = gene_values)
## Basic Scatter plot dark
basic_dark_plot <- ggplot(plot_data, aes(x = Patients, y = Expression)) +
geom_point(color = "lightskyblue") +
geom_smooth(method="lm", se=FALSE, color="cornflowerblue", linetype="dashed") +
geom_text_repel(aes(label = Expression), vjust = -0.5, color = "white", size = 2.5) +
xlab("Patients") +
ylab("Expression values") +
## facet_wrap(~c("ALL", "AML")) +
labs(title = "Plot of gene expression values of CCND3 cyclin D3 gene") +
theme(
panel.background = element_rect(fill = "grey2"),
panel.grid.major = element_line(color = "lightskyblue1", linetype = "dotted"),
panel.grid.minor = element_line(color = "steelblue2", linetype = "dotted"),
axis.title.x = element_text(color = "steelblue4", size = 12, face = "bold"),
axis.title.y = element_text(color = "steelblue4", size = 12, face = "bold"),
plot.title = element_text(color = "royalblue3", size = 14, face = "bold")
)
## Basic Scatter plot light
basic_light_plot <- ggplot(plot_data, aes(x = Patients, y = Expression)) +
geom_point(color = "#6BAED6") +
geom_smooth(method = "lm", se = FALSE, color = "#2171B5", linetype = "dashed") +
geom_text_repel(aes(label = Expression), vjust = -1, color = "gray40", size = 2.5) +
xlab("Patients") +
ylab("Expression values") +
labs(title = "Plot of gene expression values of CCND3 cyclin D3 gene") +
facet_wrap(~c("ALL", "AML")) +
theme(
panel.background = element_rect(fill = "#F0F0F0"),
panel.grid.major = element_line(color = "#D9D9D9", linetype = "dotted"),
panel.grid.minor = element_line(color = "#E5E5E5", linetype = "dotted"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
plot.title = element_text(color = "#333333", size = 14, face = "bold")
)
## Publication ready scatter plot with labels, axis, legends
gol.fac <- factor(golub.cl, levels = 0:1, labels = c("ALL", "AML"))
publication_plot <- ggplot(plot_data, aes(x = Patients, y = Expression,
color = gol.fac)) +
geom_point(size = 2, shape=1) +
geom_smooth(method = "lm", se = FALSE, linetype = "dashed", size = 0.5) +
geom_text_repel(aes(label = Expression), vjust = -2, color = "black", size = 2) +
xlab("Patients") +
ylab("Expression values") +
labs(
title = "Gene Expression Analysis of CCND3 Cyclin D3 Gene",
subtitle = "Comparison of gene expression values between ALL and AML samples",
caption = "Data source: Golub et al. ALL/AML dataset"
) +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
plot.subtitle = element_text(color = "#666666", size = 12),
plot.caption = element_text(color = "#666666", size = 10),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.title = element_text(color = "#333333", size = 12, face = "bold"),
legend.text = element_text(color = "#666666", size = 10),
legend.position = "top",
legend.background = element_rect(fill = "white"),
legend.spacing.x = unit(0.5, "cm")
) +
scale_color_manual(values = c("#6BAED6", "#F8766D"), name = "Sample Type")
## ggarrange
ggarrange(basic_dark_plot, publication_plot, ncol=1, nrow=2, heights=c(1,1))
## Prep data
gol.fac <- factor(golub.cl, levels = 0:1, labels = c("ALL", "AML"))
golub_fac_table <- table(gol.fac)
golub_fac_df <- data.frame(Type = names(golub_fac_table), Count = as.numeric(golub_fac_table))
## Boxplot
bplot <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_boxplot() +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Boxplot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
## Violin plot
vplot <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_violin() +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Violin Plot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
withoutStat <- ggarrange(bplot, vplot, nrow=1, ncol=2)
bplot_stat <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_boxplot() +
stat_boxplot(geom = "errorbar", width = 0.5, position = position_dodge(width = 0.75)) +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Boxplot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
vplot_stat <- ggplot(expression_data_box, aes(x = SampleType, y = Expression, fill = SampleType)) +
geom_violin() +
stat_boxplot(geom = "errorbar", width = 0.5, position = position_dodge(width = 0.75)) +
xlab("Types of Leukemia") +
ylab("Expression values") +
labs(title = "Violin Plot of ALL and AML expression values of CCND3") +
theme_minimal() +
theme(
plot.title = element_text(color = "#333333", size = 16, face = "bold"),
axis.title.x = element_text(color = "#333333", size = 12, face = "bold"),
axis.title.y = element_text(color = "#333333", size = 12, face = "bold"),
axis.text = element_text(color = "#666666", size = 10),
legend.position = "none"
)
withStat <- ggarrange(bplot_stat, vplot_stat, nrow=1, ncol=2)
## nested ggarrange
ggarrange(withoutStat, withStat, nrow=2, heights=c(1, 1))
